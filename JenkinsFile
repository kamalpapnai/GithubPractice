CODE_CHANGES = true
pipeline{

   agent any

   environment{
     NEW_VERSION = '1.3.0'
     
     //credentials is provided by  'Credential Binding' plugin and it takes id as parameter which we can define at time of ssaving credentials
     SERVER_CREDENTIALS = credentials('0345b755-fd12-4311-b4f8-39908fccbf9e')

   }
   stages{

        stage("build"){
            when{
               expression{
                   env.BRANCH_NAME == 'master' && CODE_CHANGES == true
               }
           }

          steps{

              echo 'building the application'
              echo "building version ${NEW_VERSION} enclosed in double quotes in groovy to access variables values"
          }

        }


        stage("test"){

           when{
               expression{
                   env.BRANCH_NAME == 'dev' || env.BRANCH_NAME == 'master'
               }
           }

           steps{
               echo 'testing the application'
           }

        }


        stage("deploy"){


            steps{
                echo 'deploying the application'
                echo "deploying with ${SERVER_CREDENTIALS}"

                //or we can directly define credentials without using it in environment
                withCredentials([usernamePassword(credentials:'0345b755-fd12-4311-b4f8-39908fccbf9e', usernameVariable: USER, passwordVariable: PWD)])
                {
                  echo "using with credentials ${USER} and ${PWD}"
                }
            }
        }

   }

   post{

       always{
           echo 'This will be executed always even if build fails or succedded'
       }

       success{
          echo 'Only when build is success'
       }

       failure{
          echo 'Only when build is failed'
       }


   }

}
